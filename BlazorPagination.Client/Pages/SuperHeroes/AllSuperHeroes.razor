@page "/superheroes/home"
@inject HttpClient _http
@inject NavigationManager _navigationManager
@using BlazorPagination.Client.ViewModels;
@rendermode InteractiveWebAssembly

<MudContainer Class="d-flex ma-4">
    <div class="d-flex ma-2 justify-center">
        <MudFab Color="Color.Primary" Label="Add" @onclick="@(() => { _navigationManager.NavigateTo("/superheroes/add"); })"/>
    </div>
    <div class="d-flex flex-wrap justify-center">
        @foreach (var item in allHeroes)
    {
        <MudCard width="250px;" Class="ma-2">
            <MudCardHeader>
                <CardHeaderAvatar>
                    <MudAvatar Color="Color.Secondary">@item.Id</MudAvatar>
                </CardHeaderAvatar>
                <CardHeaderContent>
                    <MudText Type="Type.body1">@item.Name</MudText>
                </CardHeaderContent>
            
            </MudCardHeader>
            <MudCardMedia Image="@(item.ImageUrl)" height="250" />
            <MudCardContent>
                <MudText Type="Type.body2">@item.Franchise</MudText>
                <MudText Type="Type.body2">@item.Gender</MudText>
            </MudCardContent>
        
        </MudCard>
    }
    </div>
    
</MudContainer>





@code {
    private List<SuperHeroesVm> allHeroes = new();

    protected override async Task OnInitializedAsync()
    {
        await GetAllSuperHeroesAsync();
    }

    private async Task GetAllSuperHeroesAsync()
    {
        try
        {
            allHeroes = await _http.GetFromJsonAsync<List<SuperHeroesVm>>("api/SuperHeroes")?? new List<SuperHeroesVm>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching superheroes: {ex.Message}");
        }
    } 

}


    
